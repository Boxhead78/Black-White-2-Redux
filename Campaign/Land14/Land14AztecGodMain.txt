////////////////////////
//  GOD ENGINE BODY  //
//////////////////////
//Removed Documentation because it CAN make compile it incorrectly

/*
###   TODO LIST   ###
# - Throw stuff
*/

global rGodInstance[2]

// God Engine Private Globals (oxymoron? heh)
global ge_MaxGodHandles = 2 // Needs to be same as max array index on God data
global ge_TypeInHand[2]
global ge_QuantityInHand[2]
global ge_ObjectInHand[2]
global ge_HomeTown[2]
global ge_Player[2]
global ge_EmergencyMode[2]
global ge_Busy[2]
global ge_Altar[2]
global ge_Mana[2]
global ge_ManaPerSecond[2]
global ge_MiracleDelay[2]
global ge_EpicSpellDelay[2]
global geChangeTown[2]
global tal_AltarCounter[2]

////////////////////////////
//   GOD ENGINE ENUMS   ///
//////////////////////////
//    Do NOT modify.    //
/////////////////////////

// Resource Type Enum
global GE_HT_EMPTY = 0
global GE_HT_FOOD = 1
global GE_HT_WOOD = 2
global GE_HT_ORE = 3
global GE_HT_OTHER = 4

// Miracle Type Enum
global GE_MIRACLE_TYPE_NONE                               =  0
global GE_MIRACLE_TYPE_HEAL                               =  1
global GE_MIRACLE_TYPE_LIFE                               =  2 // Does not work
global GE_MIRACLE_TYPE_DECAY                              =  3 // Does not work
global GE_MIRACLE_TYPE_DEATH                              =  4 // Implemented for land 13 + 14
global GE_MIRACLE_TYPE_FIRE                               =  5
global GE_MIRACLE_TYPE_LAVA                               =  6 // Does not work
global GE_MIRACLE_TYPE_TREMOR                             =  7 // Does not work
global GE_MIRACLE_TYPE_METEOR                             =  8
global GE_MIRACLE_TYPE_WIND                               =  9 // Does not work
global GE_MIRACLE_TYPE_TORNADO                            =  10
global GE_MIRACLE_TYPE_WATER                              =  11
global GE_MIRACLE_TYPE_STORM                              =  12
global GE_MIRACLE_TYPE_VERDANT                            =  13
global GE_MIRACLE_TYPE_FIRERAIN                           =  14
global GE_MIRACLE_TYPE_THUNDERSTORM                       =  15
global GE_MIRACLE_TYPE_METEORID                           =  16
global GE_MIRACLE_TYPE_LAST                               =  17

// Disciple Type Enum
global GE_VILLAGER_DISCIPLE_NONE                          =  0
global GE_VILLAGER_DISCIPLE_FARMER                        =  1
global GE_VILLAGER_DISCIPLE_FORESTER                      =  2
global GE_VILLAGER_DISCIPLE_FISHERMAN                     =  3 // Does not work
global GE_VILLAGER_DISCIPLE_BUILDER                       =  4
global GE_VILLAGER_DISCIPLE_BREEDER                       =  5
global GE_VILLAGER_DISCIPLE_PROTECTION                    =  6 // Does not work
global GE_VILLAGER_DISCIPLE_MISSIONARY                    =  7 // Does not work
global GE_VILLAGER_DISCIPLE_CRAFTSMAN                     =  8 // Does not work
global GE_VILLAGER_DISCIPLE_TRADER                        =  9 // Does not work
global GE_VILLAGER_DISCIPLE_CHANGE_HOUSE                  =  10
global GE_VILLAGER_DISCIPLE_WORSHIP                       =  11
global GE_VILLAGER_DISCIPLE_PROTESTOR                     =  12 // Does not work
global GE_VILLAGER_DISCIPLE_RESEARCHER                    =  13 // Does not work
global GE_VILLAGER_DISCIPLE_MINER                         =  14
global GE_VILLAGER_DISCIPLE_PILGRIM                       =  15 // Does not work
global GE_VILLAGER_DISCIPLE_REFINER                       =  16

/////////////////////////////
//  GOD ENGINE SCRIPTS   ///
///////////////////////////
// These methods act as primitives for
// creatin custom AI behavoirs.
//////////////////////////

// # PUBLIC METHODS
// Accessors & anything that returns a value
// (Note: Set methods don't return a value)
define script ge_GetGodTowns(PlayerID,GodHandle)
define script ge_GetNewGodHandle(rHomeTown,PlayerID)
define script ge_CheckGodHandle(rTown,GodHandle,PlayerID)

// # PRIVATE METHODS
define script ge_MoveToObject(GodHandle,rObject)
define script ge_MoveToRadiusAltitude(GodHandle,rTargetObject,Radius,Altitude)
define script ge_PickupResource(GodHandle,rResourceObject,ResourceType,ResourceQuantity)
define script ge_DropInStorehouse(GodHandle,rStorehouse,ResourceQuantity)
define script ge_ThrowMiracle(GodHandle, MiracleType, rTargetObject, Scripted)
define script ge_ThrowObjectAtObject(GodHandle, rThrowObject, rTargetObject)
define script ge_GodBuild(GodHandle,rBuilding,ResourceGatherRadius)
define script ge_GoGetOre(GodHandle,AmountNeeded,ResourceGatherRadius)
define script ge_GoGetWood(GodHandle,AmountNeeded,ResourceGatherRadius)
define script ge_GetAltars(GodHandle)
define script ge_CreateDisciple(GodHandle,DiscipleType)
define script ge_RemoveDisciple(GodHandle,DiscipleType,TownRadius)


/////////////////////////////
//   GE VISUAL SCRIPTS   ///
///////////////////////////
// These methods determine how the god
// will look. They may be moved to a
// different document at a later time.
//////////////////////////

define script ge_VisualFoodUp(GodHandle,Time)
define script ge_VisualWoodUp(GodHandle,Time)
define script ge_VisualOreUp(GodHandle,Time)
define script ge_VisualGodBuild(GodHandle,rTime)

// ## GOD ENGINE SCRIPTS IMPLEMENTATION ##
// # PUBLIC METHODS #


begin script ge_GetNewGodHandle(rHomeTown,PlayerID)
    rGodVisualEffect = 0
    godHandle = PlayerID
start
    // Returns -1 if there are no valid handles to be assigned to new god
    if rHomeTown exists
        godHandle = PlayerID
        
        rGodInstance[godHandle] = create with angle geAvatarAngle and scale geAvatarScale geAvatarScriptType geAvatarObjectType at {rHomeTown}
        rGodVisualEffect = create visual effect geAvatarVisualEffect on rGodInstance[godHandle] time -1
        SCALE of rGodVisualEffect = geGlowEffectScale

        set rGodVisualEffect color red 148 green 0 blue 211

        enable rGodInstance[godHandle] moveable
        enable rGodInstance[godHandle] indestructible
        disable rGodInstance[godHandle] pickup
        disable rGodInstance[godHandle] can be fisted
        ALTITUDE of rGodInstance[godHandle] = geGodAltitude
        SCRIPT_OBJECT_PROPERTY_TYPE_DENSITY of rGodInstance[godHandle] = 0.0
        // TODO: NEED WAY TO SET PHYSICS PROPERTIES SO HAS NO WEIGHT
        
        ge_TypeInHand[godHandle] = GE_HT_EMPTY
        ge_QuantityInHand[godHandle] = 0
        ge_ObjectInHand[godHandle] = 0
        ge_HomeTown[godHandle] = rHomeTown
        ge_Player[godHandle] = PLAYER of rHomeTown
        ge_Mana[godHandle] = geGodStartingMana
        ge_ManaPerSecond[godHandle] = geGodStartingManaPerSecond
        
        run background script ge_GetGodTowns(PlayerID,godHandle)
        run background script ge_GetAltars(godHandle)
        run background script ge_CheckGodHandle(rHomeTown,godHandle,PlayerID)
    else
        godHandle = -1
    end if
    
    //oGodHandle = godHandle
    run script geReturn(godHandle)
end script ge_GetNewGodHandle


begin script ge_CheckGodHandle(rTown,GodHandle,PlayerID)

    godHandle = GodHandle
    DeleteGod = 0
    GodOnPointTimer = create timer for 0 seconds
    GodPoint = 0
    rGodVisualEffect = 0

    FakeGod = 0
    FakeGodEffect = 0

start

    begin loop
        DeleteGod = 0
        begin loop
            if {rGodInstance[godHandle]} under water or rGodInstance[godHandle] not exists or PLAYER of rTown != PlayerID
                DeleteGod = 1
            end if
            if get GodOnPointTimer time remaining <= 0
                GodPoint = marker at {rGodInstance[godHandle]}
                GodOnPointTimer = create timer for 60 seconds
            elsif get GodOnPointTimer time remaining <= 5
                if {rGodInstance[godHandle]} near {GodPoint} radius 5
                    DeleteGod = 1
                end if
            elsif LandOver == 1
                DeleteGod = 1
            end if
            until DeleteGod == 1
        end loop

        //say "Deleting God"
        if LandOver == 0
            FakeGod = create with angle geAvatarAngle and scale geAvatarScale geAvatarScriptType geAvatarObjectType at {rGodInstance[godHandle]}
            FakeGodEffect = create visual effect geAvatarVisualEffect on rGodInstance[godHandle] time -1
            SCALE of FakeGodEffect = geGlowEffectScale
            set rGodVisualEffect color red 148 green 0 blue 211

            delete rGodInstance[godHandle]

            wait 5 seconds

            delete FakeGod
        elsif LandOver == 1
            set rGodInstance[godHandle] position to {1100.31,90.72,1192.28}

            wait until DeleteGodOnceAndForAll == 1

            delete rGodInstance[godHandle]
        end if

        //say "God Deleted"
        if PLAYER of rTown == ge_Player[GodHandle] and LandOver == 0
            rGodInstance[godHandle] = create with angle geAvatarAngle and scale geAvatarScale geAvatarScriptType geAvatarObjectType at {ge_HomeTown[godHandle]}
            rGodVisualEffect = create visual effect geAvatarVisualEffect on rGodInstance[godHandle] time -1
            SCALE of rGodVisualEffect = geGlowEffectScale
            set rGodVisualEffect color red 148 green 0 blue 211

            enable rGodInstance[godHandle] moveable
            enable rGodInstance[godHandle] indestructible
            disable rGodInstance[godHandle] pickup
            disable rGodInstance[godHandle] can be fisted
            ALTITUDE of rGodInstance[godHandle] = geGodAltitude
            SCRIPT_OBJECT_PROPERTY_TYPE_DENSITY of rGodInstance[godHandle] = 0.0
            // TODO: NEED WAY TO SET PHYSICS PROPERTIES SO HAS NO WEIGHT
            
            ge_TypeInHand[godHandle] = GE_HT_EMPTY
            ge_QuantityInHand[godHandle] = 0
            ge_ObjectInHand[godHandle] = 0
        end if
    end loop

end script ge_CheckGodHandle


begin script ge_GetGodTowns(PlayerID,GodHandle)

    geAITown[15]
    geCounter = 0
    geRandomNumber = 0
    geNumberOfTowns = 0
    geHomeTown = 0
    geTownCentre = 0
    godHandle = GodHandle

start

begin loop
    wait until rGodInstance[godHandle] exists
    if geCounter >= 15
        geCounter = 0
    end if

    geAITown[geCounter] = get town with id geCounter
    geTownCentre = get building ABODE_NUMBER_TOWN_CENTRE in geAITown[geCounter] min built 1.0
    if PLAYER of geAITown[geCounter] == PlayerID and geTownCentre exists
        geHomeTown = geAITown[geCounter]
        ge_HomeTown[godHandle] = geHomeTown
        wait until geChangeTown[godHandle] == 1
        geChangeTown[godHandle] = 0
    end if

    geNumberOfTowns = get player PlayerID town total
    geCounter += number from 1 to geNumberOfTowns
end loop

end script ge_GetGodTowns

// ## GOD ENGINE SCRIPTS IMPLEMENTATION ##
// # PRIVATE METHODS #

// I really wish there was a more elegant way to do this...
begin script ge_MoveToObject(GodHandle,rTargetObject)
    godHandle = GodHandle
start
    if rTargetObject exists and rGodInstance[godHandle] exists
        while {rGodInstance[godHandle]} not near {rTargetObject} radius geArrivalRadius and rGodInstance[godHandle] exists
            ALTITUDE of rGodInstance[godHandle] = geGodAltitude
            if ge_ObjectInHand[godHandle] exists
                set ge_ObjectInHand[godHandle] position to {rGodInstance[godHandle]}
                ALTITUDE of ge_ObjectInHand[godHandle] = ALTITUDE of rGodInstance[godHandle]
            end if
            set rGodInstance[godHandle] velocity heading ({rTargetObject} + {0,(geGodAltitude + 1.0),0}) speed geGodSpeed
            wait 0.05 seconds
        end while
        
        set rGodInstance[godHandle] position to {rTargetObject}
        ALTITUDE of rGodInstance[godHandle] = geGodAltitude
        if ge_ObjectInHand[godHandle] exists
            ALTITUDE of ge_ObjectInHand[godHandle] = ALTITUDE of rGodInstance[godHandle]
        end if
    end if
end script ge_MoveToObject


begin script ge_MoveToRadiusAltitude(GodHandle,rTargetObject,Radius,Altitude)
    myRadius = Radius
    targetAltitude = Altitude
    godHandle = GodHandle
    currentAltitude = ALTITUDE of rGodInstance[GodHandle]
    altitudeChange = (targetAltitude - currentAltitude) * 0.05
start
    while {rGodInstance[godHandle]} not near {rTargetObject} radius myRadius and rTargetObject exists and rGodInstance[godHandle] exists
        if not 0.1 < (targetAltitude - currentAltitude) or not (targetAltitude - currentAltitude) < -0.1
            currentAltitude += altitudeChange
        end if
        ALTITUDE of rGodInstance[godHandle] = currentAltitude
        set rGodInstance[godHandle] velocity heading ({rTargetObject} + {0,(targetAltitude + 1.0),0}) speed geGodSpeed
        wait 0.01 seconds
    end while

    ALTITUDE of rGodInstance[godHandle] = targetAltitude
end script ge_MoveToRadiusAltitude


// Passing in a resourceQuantity greater than that available in ResourceObject will cause it to take
// as much as it can. Passing in -1 will also cause it to take all ResourceType in ResourceObject.
// Also, gathering a resourse with a different resourse type in hand will cause the first type to disappear.
begin script ge_PickupResource(GodHandle,rResourceObject,ResourceType,ResourceQuantity)
    godHandle = GodHandle
    resourceQuantity = ResourceQuantity
    resourceType = ResourceType
    resourceGatherTime = 0 // resourceQuantity / (geGodResourceGatherSpeed * 10.0)
    resourceAvailable = 0
start
    if rGodInstance[godHandle] exists
        run script ge_MoveToObject(godHandle,rResourceObject)

        // If holding a different resource than trying to pick up, first resource gets deleted
        if ge_TypeInHand[godHandle] != resourceType
            ge_QuantityInHand[godHandle] = 0
            ge_TypeInHand[godHandle] = resourceType
        end if

        ALTITUDE of rGodInstance[godHandle] = gePickupResourceAltitude
        
        if rResourceObject exists
            if resourceType == GE_HT_FOOD
                resourceAvailable = get resource RESOURCE_TYPE_FOOD in rResourceObject
                if resourceQuantity < 0 or resourceAvailable < resourceQuantity
                    resourceQuantity = resourceAvailable
                    resourceGatherTime = resourceQuantity / (geGodResourceGatherSpeed * 10.0)
                end if
                
                run background script ge_VisualFoodUp(godHandle,resourceGatherTime)
                while resourceQuantity > geGodResourceGatherSpeed
                    ge_QuantityInHand[godHandle] += geGodResourceGatherSpeed
                    remove resource RESOURCE_TYPE_FOOD geGodResourceGatherSpeed from rResourceObject
                    resourceQuantity = resourceQuantity - geGodResourceGatherSpeed
                    wait 0.1 seconds
                end while
                ge_QuantityInHand[godHandle] += resourceQuantity
                remove resource RESOURCE_TYPE_FOOD resourceQuantity from rResourceObject
                
                
            elsif resourceType == GE_HT_WOOD
                resourceAvailable = get resource RESOURCE_TYPE_WOOD in rResourceObject
                if resourceQuantity < 0 or resourceAvailable < resourceQuantity
                    resourceQuantity = resourceAvailable
                    resourceGatherTime = resourceQuantity / (geGodResourceGatherSpeed * 10.0)
                end if
                
                run background script ge_VisualWoodUp(godHandle,resourceGatherTime)
                while resourceQuantity > geGodResourceGatherSpeed
                    ge_QuantityInHand[godHandle] += geGodResourceGatherSpeed
                    remove resource RESOURCE_TYPE_WOOD geGodResourceGatherSpeed from rResourceObject
                    resourceQuantity = resourceQuantity - geGodResourceGatherSpeed
                    wait 0.1 seconds
                end while
                ge_QuantityInHand[godHandle] += resourceQuantity
                remove resource RESOURCE_TYPE_WOOD resourceQuantity from rResourceObject
                
                
            elsif resourceType == GE_HT_ORE
                resourceAvailable = get resource RESOURCE_TYPE_ORE in rResourceObject
                if resourceQuantity < 0 or resourceAvailable < resourceQuantity
                    resourceQuantity = resourceAvailable
                    resourceGatherTime = resourceQuantity / (geGodResourceGatherSpeed * 10.0)
                end if
                
                run background script ge_VisualOreUp(godHandle,resourceGatherTime)
                while resourceQuantity > geGodResourceGatherSpeed
                    ge_QuantityInHand[godHandle] += geGodResourceGatherSpeed
                    remove resource RESOURCE_TYPE_ORE geGodResourceGatherSpeed from rResourceObject
                    resourceQuantity = resourceQuantity - geGodResourceGatherSpeed
                    wait 0.1 seconds
                end while
                ge_QuantityInHand[godHandle] += resourceQuantity
                remove resource RESOURCE_TYPE_ORE resourceQuantity from rResourceObject
            end if
        end if
        
        if ge_QuantityInHand[godHandle] <= 0
            ge_TypeInHand[godHandle] = GE_HT_EMPTY
        end if
        ALTITUDE of rGodInstance[godHandle] = geGodAltitude
    end if
end script ge_PickupResource


begin script ge_DropInStorehouse(GodHandle,rStorehouse,ResourceQuantity)
    godHandle = GodHandle
    resourceQuantity = ResourceQuantity
start
    if rGodInstance[godHandle] exists
        run script ge_MoveToObject(godHandle,rStorehouse)
        
        // Passing -1 or amount greater than held will both dump full quantity
        if resourceQuantity < 0
            resourceQuantity = ge_QuantityInHand[godHandle]
        elsif resourceQuantity > ge_QuantityInHand[godHandle]
            resourceQuantity = ge_QuantityInHand[godHandle]
        end if
        
        if ge_TypeInHand[godHandle] == GE_HT_FOOD
            add resource RESOURCE_TYPE_FOOD resourceQuantity to rStorehouse
            ge_QuantityInHand[godHandle] -= resourceQuantity
            if camera position near {rGodInstance[godHandle]} radius 100.00
                play sound "PILEFOOD_01" at {rGodInstance[godHandle]} with volume 1.0 pitch 0.0
                wait 2 seconds
                stop sound "PILEFOOD_01"
            end if
        elsif ge_TypeInHand[godHandle] == GE_HT_WOOD
            add resource RESOURCE_TYPE_WOOD resourceQuantity to rStorehouse
            ge_QuantityInHand[godHandle] -= resourceQuantity
            if camera position near {rGodInstance[godHandle]} radius 100.00
                play sound "PILEWOOD_01" at {rGodInstance[godHandle]} with volume 1.0 pitch 0.0
                wait 2 seconds
                stop sound "PILEWOOD_01"
            end if
        elsif ge_TypeInHand[godHandle] == GE_HT_ORE
            add resource RESOURCE_TYPE_ORE resourceQuantity to rStorehouse
            ge_QuantityInHand[godHandle] -= resourceQuantity
            if camera position near {rGodInstance[godHandle]} radius 100.00
                play sound "PILEFOOD_02" at {rGodInstance[godHandle]} with volume 1.0 pitch 0.0
                wait 2 seconds
                stop sound "PILEFOOD_02"
            end if
        end if
        
        set rGodInstance[godHandle] position to {rStorehouse}
        ALTITUDE of rGodInstance[godHandle] = geGodAltitude
    end if
end script ge_DropInStorehouse


begin script ge_ThrowMiracle(GodHandle, MiracleType, rTargetObject, Scripted)
    godHandle = GodHandle
    miracleType = MiracleType
    newMiracle = 0
    currMana = 0
start
    if miracleType > GE_MIRACLE_TYPE_NONE and miracleType < GE_MIRACLE_TYPE_LAST and rGodInstance[godHandle] exists and ge_Altar[godHandle] == 1
        if Scripted == 0
            run script ge_MoveToRadiusAltitude(godHandle,rTargetObject,geGodThrowRadius,geGodThrowAltitude)
        end if
        //SCRIPT_OBJECT_PROPERTY_TYPE_YPOS of rGodInstance[godHandle] = geGodThrowAltitude
        wait 1 seconds
        if ge_Altar[godHandle] == 1
            if miracleType == GE_MIRACLE_TYPE_HEAL
                currMana = get player ge_Player[godHandle] mana
                set player ge_Player[godHandle] mana currMana - geManaCostHeal
                newMiracle = make player ge_Player[godHandle] throw miracle MIRACLE_TYPE_HEAL from ({rGodInstance[godHandle]} + {0, -3.0, 0}) heading (({rTargetObject} + {0,geThrowArc,0}) - {rGodInstance[godHandle]})
            elsif miracleType == GE_MIRACLE_TYPE_LIFE
                currMana = get player ge_Player[godHandle] mana
                set player ge_Player[godHandle] mana currMana - geManaCostLife
                newMiracle = make player ge_Player[godHandle] throw miracle MIRACLE_TYPE_LIFE from ({rGodInstance[godHandle]} + {0, -3.0, 0}) heading (({rTargetObject} + {0,geThrowArc,0}) - {rGodInstance[godHandle]})
            elsif miracleType == GE_MIRACLE_TYPE_DECAY
                currMana = get player ge_Player[godHandle] mana
                set player ge_Player[godHandle] mana currMana - geManaCostDecay
                newMiracle = make player ge_Player[godHandle] throw miracle MIRACLE_TYPE_DECAY from ({rGodInstance[godHandle]} + {0, -3.0, 0}) heading (({rTargetObject} + {0,geThrowArc,0}) - {rGodInstance[godHandle]})
            elsif miracleType == GE_MIRACLE_TYPE_DEATH
                currMana = get player ge_Player[godHandle] mana
                set player ge_Player[godHandle] mana currMana - 20000
                run background script LC14_DeathSpell(ge_Player[godHandle],rTargetObject,marker at {rGodInstance[godHandle]})
            elsif miracleType == GE_MIRACLE_TYPE_FIRE
                currMana = get player ge_Player[godHandle] mana
                set player ge_Player[godHandle] mana currMana - geManaCostFire
                newMiracle = make player ge_Player[godHandle] throw miracle MIRACLE_TYPE_FIRE from ({rGodInstance[godHandle]} + {0, -3.0, 0}) heading (({rTargetObject} + {0,geThrowArc,0}) - {rGodInstance[godHandle]})
            elsif miracleType == GE_MIRACLE_TYPE_LAVA
                currMana = get player ge_Player[godHandle] mana
                set player ge_Player[godHandle] mana currMana - geManaCostLava
                newMiracle = make player ge_Player[godHandle] throw miracle MIRACLE_TYPE_LAVA from ({rGodInstance[godHandle]} + {0, -3.0, 0}) heading (({rTargetObject} + {0,geThrowArc,0}) - {rGodInstance[godHandle]})
            elsif miracleType == GE_MIRACLE_TYPE_TREMOR
                currMana = get player ge_Player[godHandle] mana
                set player ge_Player[godHandle] mana currMana - geManaCostTremor
                newMiracle = make player ge_Player[godHandle] throw miracle MIRACLE_TYPE_TREMOR from ({rGodInstance[godHandle]} + {0, -3.0, 0}) heading (({rTargetObject} + {0,geThrowArc,0}) - {rGodInstance[godHandle]})
            elsif miracleType == GE_MIRACLE_TYPE_METEOR
                currMana = get player ge_Player[godHandle] mana
                set player ge_Player[godHandle] mana currMana - geManaCostMeteor
                newMiracle = make player ge_Player[godHandle] throw miracle MIRACLE_TYPE_METEOR from ({rGodInstance[godHandle]} + {0, -3.0, 0}) heading (({rTargetObject} + {0,geThrowArc,0}) - {rGodInstance[godHandle]})
            elsif miracleType == GE_MIRACLE_TYPE_WIND
                currMana = get player ge_Player[godHandle] mana
                set player ge_Player[godHandle] mana currMana - geManaCostWind
                newMiracle = make player ge_Player[godHandle] throw miracle MIRACLE_TYPE_WIND from ({rGodInstance[godHandle]} + {0, -3.0, 0}) heading (({rTargetObject} + {0,geThrowArc,0}) - {rGodInstance[godHandle]})
            elsif miracleType == GE_MIRACLE_TYPE_TORNADO
                currMana = get player ge_Player[godHandle] mana
                set player ge_Player[godHandle] mana currMana - geManaCostTornado
                newMiracle = make player ge_Player[godHandle] throw miracle MIRACLE_TYPE_TORNADO from ({rGodInstance[godHandle]} + {0, -3.0, 0}) heading (({rTargetObject} + {0,geThrowArc,0}) - {rGodInstance[godHandle]})
            elsif miracleType == GE_MIRACLE_TYPE_WATER
                currMana = get player ge_Player[godHandle] mana
                set player ge_Player[godHandle] mana currMana - geManaCostWater
                newMiracle = make player ge_Player[godHandle] throw miracle MIRACLE_TYPE_WATER from ({rGodInstance[godHandle]} + {0, -3.0, 0}) heading (({rTargetObject} + {0,geThrowArc,0}) - {rGodInstance[godHandle]})
            elsif miracleType == GE_MIRACLE_TYPE_STORM
                currMana = get player ge_Player[godHandle] mana
                set player ge_Player[godHandle] mana currMana - geManaCostStorm
                newMiracle = make player ge_Player[godHandle] throw miracle MIRACLE_TYPE_STORM from ({rGodInstance[godHandle]} + {0, -3.0, 0}) heading (({rTargetObject} + {0,geThrowArc,0}) - {rGodInstance[godHandle]})
            elsif miracleType == GE_MIRACLE_TYPE_VERDANT
                currMana = get player ge_Player[godHandle] mana
                set player ge_Player[godHandle] mana currMana - geManaCostVerdant
                run background script VerdantSpell(ge_Player[godHandle],rTargetObject)
            elsif miracleType == GE_MIRACLE_TYPE_FIRERAIN
                currMana = get player ge_Player[godHandle] mana
                set player ge_Player[godHandle] mana currMana - geManaCostFirerain
                run background script FirerainSpell(ge_Player[godHandle],rTargetObject)
            elsif miracleType == GE_MIRACLE_TYPE_THUNDERSTORM
                currMana = get player ge_Player[godHandle] mana
                set player ge_Player[godHandle] mana currMana - geManaCostThunderstorm
                run background script ThunderstormSpell(ge_Player[godHandle],rTargetObject)
            elsif miracleType == GE_MIRACLE_TYPE_METEORID
                currMana = get player ge_Player[godHandle] mana
                set player ge_Player[godHandle] mana currMana - geManaCostMeteorid
                run background script MeteorSpell(ge_Player[godHandle],rTargetObject)
            end if
        end if
        SCRIPT_OBJECT_PROPERTY_TYPE_SPEED of newMiracle = geThrowSpeed
        wait 1 seconds
        SCRIPT_OBJECT_PROPERTY_TYPE_YPOS of rGodInstance[godHandle] = geGodAltitude
    end if
end script ge_ThrowMiracle


// BROKEN
//  - Not calculating trajectories properly. I'm sure that density is a factor in wind resistance... I need
//    to experiment to figure out the exact physical properties of the world, and prepare a better formula.
begin script ge_ThrowObjectAtObject(GodHandle, rThrowObject, rTargetObject)
    godHandle = GodHandle
    throwObjectAltitudeMod = SCRIPT_OBJECT_PROPERTY_TYPE_ACTUAL_HEIGHT of rThrowObject * 0.8
    velocityYmod = 0 // set to 45 degrees
    myDistance = 0
    // distanceOffTarget = 0.0
    // lastDistanceOffTarget = 0.0
    // throwDistance = get distance from {rThrowObject} to {rTargetObject}
start
/*
#    God moves to object
#    God sets object position to just above itself
#    God moves within range (if necessary)
#    God calculates needed velocity and fires
#   ^- Object fires from above god to avoid knocking itself over
#   ^- 
*/
    if rGodInstance[godHandle] exists
        run script ge_MoveToRadiusAltitude(godHandle,rThrowObject,geArrivalRadius,gePickUpObjectAltitude)
        ge_ObjectInHand[godHandle] = rThrowObject // TODO: Is this needed?
        
        // This will make them both move together, the object hovering above the god.
        ALTITUDE of rGodInstance[godHandle] = geGodAltitude + 30
        ALTITUDE of rThrowObject = geGodAltitude + throwObjectAltitudeMod + 30
        //run background script ge_MoveToRadiusAltitude(godHandle,rThrowObject,rTargetObject,geGodThrowRadius + 60,(geGodAltitude + throwObjectAltitudeMod + 30))
        run script ge_MoveToRadiusAltitude(godHandle,rTargetObject,geGodThrowRadius + 60,geGodAltitude + 30)

        //myDistance = get distance from {rThrowObject} to {rTargetObject}
        //myDistance -= 35
        velocityYmod = (get distance from {rThrowObject} to {rTargetObject}) * number from 0.7 to 1
        set rThrowObject velocity heading {rTargetObject} + {0,velocityYmod,0} speed (get distance from {rThrowObject} to {rTargetObject}) * number from 0.7 to 1 // * SCRIPT_OBJECT_PROPERTY_TYPE_DENSITY of rThrowObject
        // set rThrowObject target {rTargetObject} time 2 // (get distance from {rThrowObject} to {rTargetObject}) * 0.1
        ge_ObjectInHand[godHandle] = 0
        ALTITUDE of rGodInstance[godHandle] = geGodAltitude
        wait 2 seconds
    end if
end script ge_ThrowObjectAtObject


begin script ge_GodBuild(GodHandle,rBuilding,ResourceGatherRadius)
    godHandle = GodHandle
    resourceGatherRadius = ResourceGatherRadius
    builtRatio = HEALTH of rBuilding
    myStorehouse = get building ABODE_NUMBER_STORAGE_PIT in ge_HomeTown[godHandle] min built 1.0
    baseOreCost = 0
    baseWoodCost = 0
    finalOreCost = 0
    finalWoodCost = 0
    woodBuildTime = 0
    buildRate = 0
    buildTime = 0
start

    if rGodInstance[godHandle] exists
        myStorehouse = get building ABODE_NUMBER_STORAGE_PIT in ge_HomeTown[godHandle] min built 1.0

        // Get base wood cost of building type
        run script bcGetOreCostOf(rBuilding)
        baseOreCost = bcReturnVal
        run script bcUnlockReturn
        run script bcGetWoodCostOf(rBuilding)
        baseWoodCost = bcReturnVal
        run script bcUnlockReturn
        
        // Calculate cost to finish based on completion level
        finalWoodCost = (baseWoodCost * (1.0 - builtRatio)) * geGodBuildEfficiency
        finalOreCost = (baseOreCost * (1.0 - builtRatio)) * geGodBuildEfficiency
        
        if finalWoodCost > 0
            if not ge_TypeInHand[godHandle] == GE_HT_WOOD and not ge_TypeInHand[godHandle] == GE_HT_EMPTY
                run script ge_DropInStorehouse(godHandle,myStorehouse,-1)
            end if
            run script ge_GoGetWood(godHandle,finalWoodCost,resourceGatherRadius)
        end if
            
        // buildRate = amount of ratio to restore every 0.1 seconds
        buildRate = (1.0 - builtRatio) / ((finalWoodCost + finalOreCost) / geGodBuildRate)
        // woodBuildTime = number of loop intervals spent on wood
        woodBuildTime = (finalWoodCost / (finalWoodCost + finalOreCost)) * ((finalWoodCost + finalOreCost) / geGodBuildRate)
        buildTime = woodBuildTime
        
        run script ge_MoveToRadiusAltitude(godHandle,rBuilding,4.0,geGodBuildAltitude)

        //run background script ge_VisualGodBuild(godHandle,buildTime)
        while HEALTH of rBuilding < 1.0 and 0 < woodBuildTime and rBuilding exists and not rBuilding on fire
            HEALTH of rBuilding += buildRate / 2
            BUILT of rBuilding += buildRate / 2
            woodBuildTime -= 1
            wait 0.1 seconds
        end while
        
        ge_QuantityInHand[godHandle] = 0
        ge_TypeInHand[godHandle] = GE_HT_EMPTY

        if finalOreCost > 0 and not rBuilding on fire
            if not ge_TypeInHand[godHandle] == GE_HT_ORE and not ge_TypeInHand[godHandle] == GE_HT_EMPTY
                run script ge_DropInStorehouse(godHandle,myStorehouse,-1)
            end if
            run script ge_GoGetOre(godHandle,finalOreCost,resourceGatherRadius)
        end if
        
        run script ge_MoveToRadiusAltitude(godHandle,rBuilding,4.0,geGodBuildAltitude)
        
        //run background script ge_VisualGodBuild(godHandle,buildTime)
        while HEALTH of rBuilding < 1.0 and rBuilding exists and not rBuilding on fire
            HEALTH of rBuilding += buildRate / 2
            BUILT of rBuilding += buildRate / 2
            wait 0.1 seconds
        end while
        
        ge_QuantityInHand[godHandle] = 0
        ge_TypeInHand[godHandle] = GE_HT_EMPTY
        
        ALTITUDE of rGodInstance[godHandle] = geGodAltitude
    end if
end script ge_GodBuild


// Fist tries storehouse, then tries ore rocks
begin script ge_GoGetOre(GodHandle,AmountNeeded,ResourceGatherRadius)
    godHandle = GodHandle
    amountNeeded = AmountNeeded
    resourceGatherRadius = ResourceGatherRadius
    myStorehouse = 0
    maxStorehouseChecks = get number of type SCRIPT_OBJECT_TYPE_ABODE ABODE_NUMBER_STORAGE_PIT in ge_HomeTown[godHandle] min built 1.0
    maxTries = 0
    myOreRock = 0
start
    if rGodInstance[godHandle] exists
        if ge_TypeInHand[godHandle] != GE_HT_ORE
            ge_QuantityInHand[godHandle] = 0
            ge_TypeInHand[godHandle] = GE_HT_ORE
        end if
        maxTries = 0
        while ge_QuantityInHand[godHandle] < amountNeeded and 0 < maxStorehouseChecks and maxTries < 5
            maxStorehouseChecks -= 1
            myStorehouse = get town ge_HomeTown[godHandle] storage pit with most RESOURCE_TYPE_ORE
            if myStorehouse exists
                run script ge_PickupResource(godHandle,myStorehouse,GE_HT_ORE,amountNeeded)
            end if
            maxTries++
        end while
        maxTries = 0
        myOreRock = get SCRIPT_OBJECT_TYPE_ORE_ROCK at {ge_HomeTown[godHandle]} radius resourceGatherRadius
        while ge_QuantityInHand[godHandle] < amountNeeded and myOreRock exists and maxTries < 5
            run script ge_PickupResource(godHandle,myOreRock,GE_HT_ORE,amountNeeded)
            myOreRock = get SCRIPT_OBJECT_TYPE_ORE_ROCK at {ge_HomeTown[godHandle]} radius resourceGatherRadius
            maxTries++
        end while
    end if
end script ge_GoGetOre


// First tries storehouse, then tries trees
begin script ge_GoGetWood(GodHandle,AmountNeeded,ResourceGatherRadius)
    godHandle = GodHandle
    amountNeeded = AmountNeeded
    resourceGatherRadius = ResourceGatherRadius
    myStorehouse = 0
    maxStorehouseChecks = get number of type SCRIPT_OBJECT_TYPE_ABODE ABODE_NUMBER_STORAGE_PIT in ge_HomeTown[godHandle] min built 1.0
    maxTries = 0
    myTree = 0
start
    if rGodInstance[godHandle] exists
        if ge_TypeInHand[godHandle] != GE_HT_WOOD
            ge_QuantityInHand[godHandle] = 0
            ge_TypeInHand[godHandle] = GE_HT_WOOD
        end if
        maxTries = 0
        while ge_QuantityInHand[godHandle] < amountNeeded and 0 < maxStorehouseChecks and maxTries < 5
            maxStorehouseChecks -= 1
            myStorehouse = get town ge_HomeTown[godHandle] storage pit with most RESOURCE_TYPE_WOOD
            if myStorehouse exists
                run script ge_PickupResource(godHandle,myStorehouse,GE_HT_WOOD,amountNeeded)
            end if
            maxTries++
        end while
        maxTries = 0
        myTree = get SCRIPT_OBJECT_TYPE_TREE at {ge_HomeTown[godHandle]} radius resourceGatherRadius
        while ge_QuantityInHand[godHandle] < amountNeeded and myTree exists and maxTries < 5
            run script ge_PickupResource(godHandle,myTree,GE_HT_WOOD,amountNeeded)
            myTree = get SCRIPT_OBJECT_TYPE_TREE at {ge_HomeTown[godHandle]} radius resourceGatherRadius
            maxTries++
        end while
    end if
end script ge_GoGetWood


begin script ge_GetAltars(GodHandle)

    godHandle = GodHandle
    AltarCounter = 0
    Counter = 0
    myAltar = 0
    myTown[20]

start

begin loop
    wait until rGodInstance[godHandle] exists
    if SK_AltarCounter[godHandle] >= 1
        ge_Altar[godHandle] = 1
    else
        ge_Altar[godHandle] = 0
    end if
end loop

end script ge_GetAltars


begin script ge_CreateDisciple(GodHandle,DiscipleType)
    godHandle = GodHandle
    discipleType = DiscipleType
    villagerToMod = 0
    randomPlace = 0
start
    if rGodInstance[godHandle] exists
        while not villagerToMod exists or (discipleType == GE_VILLAGER_DISCIPLE_BREEDER and not villagerToMod is male)
            randomPlace = get random abode in town ge_HomeTown[godHandle]
            villagerToMod = get disciple VILLAGER_DISCIPLE_NONE at {randomPlace} radius 50.0
        end while
        //run script ge_MoveToRadiusAltitude(godHandle,villagerToMod,geArrivalRadius,gePickupResourceAltitude)

        if discipleType == GE_VILLAGER_DISCIPLE_FARMER
            set villagerToMod disciple VILLAGER_DISCIPLE_FARMER with sound
        elsif discipleType == GE_VILLAGER_DISCIPLE_FORESTER
            set villagerToMod disciple VILLAGER_DISCIPLE_FORESTER with sound
        elsif discipleType == GE_VILLAGER_DISCIPLE_FISHERMAN
            set villagerToMod disciple VILLAGER_DISCIPLE_FISHERMAN with sound
        elsif discipleType == GE_VILLAGER_DISCIPLE_BUILDER
            set villagerToMod disciple VILLAGER_DISCIPLE_BUILDER with sound
        elsif discipleType == GE_VILLAGER_DISCIPLE_BREEDER
            set villagerToMod disciple VILLAGER_DISCIPLE_BREEDER with sound
        elsif discipleType == GE_VILLAGER_DISCIPLE_PROTECTION
            set villagerToMod disciple VILLAGER_DISCIPLE_PROTECTION with sound
        elsif discipleType == GE_VILLAGER_DISCIPLE_MISSIONARY
            set villagerToMod disciple VILLAGER_DISCIPLE_MISSIONARY with sound
        elsif discipleType == GE_VILLAGER_DISCIPLE_CRAFTSMAN
            set villagerToMod disciple VILLAGER_DISCIPLE_CRAFTSMAN with sound
        elsif discipleType == GE_VILLAGER_DISCIPLE_TRADER
            set villagerToMod disciple VILLAGER_DISCIPLE_TRADER with sound
        elsif discipleType == GE_VILLAGER_DISCIPLE_CHANGE_HOUSE
            set villagerToMod disciple VILLAGER_DISCIPLE_CHANGE_HOUSE with sound
        elsif discipleType == GE_VILLAGER_DISCIPLE_WORSHIP
            set villagerToMod disciple VILLAGER_DISCIPLE_WORSHIP with sound
        elsif discipleType == GE_VILLAGER_DISCIPLE_PROTESTOR
            set villagerToMod disciple VILLAGER_DISCIPLE_PROTESTOR with sound
        elsif discipleType == GE_VILLAGER_DISCIPLE_RESEARCHER
            set villagerToMod disciple VILLAGER_DISCIPLE_RESEARCHER with sound
        elsif discipleType == GE_VILLAGER_DISCIPLE_MINER
            set villagerToMod disciple VILLAGER_DISCIPLE_MINER with sound
        elsif discipleType == GE_VILLAGER_DISCIPLE_PILGRIM
            set villagerToMod disciple VILLAGER_DISCIPLE_PILGRIM with sound
        elsif discipleType == GE_VILLAGER_DISCIPLE_REFINER
            set villagerToMod disciple VILLAGER_DISCIPLE_REFINER with sound
        end if

        ALTITUDE of rGodInstance[godHandle] = geGodAltitude
    end if
end script ge_CreateDisciple


begin script ge_RemoveDisciple(GodHandle,DiscipleType,TownRadius)
    godHandle = GodHandle
    discipleType = DiscipleType
    villagerToMod = 0
    townRadius = TownRadius
start
    if rGodInstance[godHandle] exists
        if discipleType == GE_VILLAGER_DISCIPLE_FARMER
            villagerToMod = get disciple VILLAGER_DISCIPLE_FARMER at {ge_HomeTown[godHandle]} radius townRadius
        elsif discipleType == GE_VILLAGER_DISCIPLE_FORESTER
            villagerToMod = get disciple VILLAGER_DISCIPLE_FORESTER at {ge_HomeTown[godHandle]} radius townRadius
        elsif discipleType == GE_VILLAGER_DISCIPLE_FISHERMAN
            villagerToMod = get disciple VILLAGER_DISCIPLE_FISHERMAN at {ge_HomeTown[godHandle]} radius townRadius
        elsif discipleType == GE_VILLAGER_DISCIPLE_BUILDER
            villagerToMod = get disciple VILLAGER_DISCIPLE_BUILDER at {ge_HomeTown[godHandle]} radius townRadius
        elsif discipleType == GE_VILLAGER_DISCIPLE_BREEDER
            villagerToMod = get disciple VILLAGER_DISCIPLE_BREEDER at {ge_HomeTown[godHandle]} radius townRadius
        elsif discipleType == GE_VILLAGER_DISCIPLE_PROTECTION
            villagerToMod = get disciple VILLAGER_DISCIPLE_PROTECTION at {ge_HomeTown[godHandle]} radius townRadius
        elsif discipleType == GE_VILLAGER_DISCIPLE_MISSIONARY
            villagerToMod = get disciple VILLAGER_DISCIPLE_MISSIONARY at {ge_HomeTown[godHandle]} radius townRadius
        elsif discipleType == GE_VILLAGER_DISCIPLE_CRAFTSMAN
            villagerToMod = get disciple VILLAGER_DISCIPLE_CRAFTSMAN at {ge_HomeTown[godHandle]} radius townRadius
        elsif discipleType == GE_VILLAGER_DISCIPLE_TRADER
            villagerToMod = get disciple VILLAGER_DISCIPLE_TRADER at {ge_HomeTown[godHandle]} radius townRadius
        elsif discipleType == GE_VILLAGER_DISCIPLE_CHANGE_HOUSE
            villagerToMod = get disciple VILLAGER_DISCIPLE_CHANGE_HOUSE at {ge_HomeTown[godHandle]} radius townRadius
        elsif discipleType == GE_VILLAGER_DISCIPLE_WORSHIP
            villagerToMod = get disciple VILLAGER_DISCIPLE_WORSHIP at {ge_HomeTown[godHandle]} radius townRadius
        elsif discipleType == GE_VILLAGER_DISCIPLE_PROTESTOR
            villagerToMod = get disciple VILLAGER_DISCIPLE_PROTESTOR at {ge_HomeTown[godHandle]} radius townRadius
        elsif discipleType == GE_VILLAGER_DISCIPLE_RESEARCHER
            villagerToMod = get disciple VILLAGER_DISCIPLE_RESEARCHER at {ge_HomeTown[godHandle]} radius townRadius
        elsif discipleType == GE_VILLAGER_DISCIPLE_MINER
            villagerToMod = get disciple VILLAGER_DISCIPLE_MINER at {ge_HomeTown[godHandle]} radius townRadius
        elsif discipleType == GE_VILLAGER_DISCIPLE_PILGRIM
            villagerToMod = get disciple VILLAGER_DISCIPLE_PILGRIM at {ge_HomeTown[godHandle]} radius townRadius
        elsif discipleType == GE_VILLAGER_DISCIPLE_REFINER
            villagerToMod = get disciple VILLAGER_DISCIPLE_REFINER at {ge_HomeTown[godHandle]} radius townRadius
        end if
        
        if villagerToMod exists
            //run script ge_MoveToRadiusAltitude(godHandle,villagerToMod,geArrivalRadius,gePickupResourceAltitude)
            set villagerToMod disciple VILLAGER_DISCIPLE_NONE with sound
            ALTITUDE of rGodInstance[godHandle] = geGodAltitude
        end if
    end if
end script ge_RemoveDisciple


// ## GE VISUAL SCRIPTS IMPLEMENTATION ##
begin script ge_VisualFoodUp(godHandle,rTime)
    visualEffect = create visual effect VISUAL_EFFECT_RESOURCE_GRAIN_UP at {rGodInstance[godHandle]}+{0,-2,-3} time rTime
start
    if camera position near {rGodInstance[godHandle]} radius 200.00
        play sound "PICKUPFOOD" at {rGodInstance[godHandle]} with volume 1.0 pitch 0.0
        wait rTime seconds
        stop sound "PICKUPFOOD"
    end if
end script ge_VisualFoodUp


begin script ge_VisualWoodUp(godHandle,rTime)
    visualEffect = create visual effect VISUAL_EFFECT_RESOURCE_WOOD_UP at {rGodInstance[godHandle]}+{0,-2,-3} time rTime
start
    if camera position near {rGodInstance[godHandle]} radius 200.00
        play sound "PICKUPWOOD" at {rGodInstance[godHandle]} with volume 1.0 pitch 0.0
        wait rTime seconds
        stop sound "PICKUPWOOD"
    end if
end script ge_VisualWoodUp


begin script ge_VisualOreUp(godHandle,rTime)
    visualEffect = create visual effect VISUAL_EFFECT_RESOURCE_ORE_UP at {rGodInstance[godHandle]}+{0,-2,-3} time rTime
start
    if camera position near {rGodInstance[godHandle]} radius 200.00
        play sound "PICKUPORE" at {rGodInstance[godHandle]} with volume 1.0 pitch 0.0
        wait rTime seconds
        stop sound "PICKUPORE"
    end if
end script ge_VisualOreUp


begin script ge_VisualGodBuild(godHandle,rTime)

start
    if camera position near {rGodInstance[godHandle]} radius 200.00
        play sound "GODBUILDLOOP" at {rGodInstance[godHandle]} with volume 1.0 pitch 0.0
        wait rTime seconds
        stop sound "GODBUILDLOOP"
    end if
end script ge_VisualGodBuild